version: '3.7'

services:
  redis:
    image: redis:latest
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-exporter:
    image: oliver006/redis_exporter:latest
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"  # Prometheus will scrape this
    depends_on:
      redis:
        condition: service_healthy

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "11102:3100"
    volumes:
      - ./loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      - jaeger
      - prometheus
    ports:
      - "9464:9464"

  jaeger:
    image: jaegertracing/jaeger:2.3.0
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI

  flask-app:
    build: ./flask_app
    depends_on:
      redis:
        condition: service_healthy
      otel-collector:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build: ./worker_scripts
    depends_on:
      flask-app:
        condition: service_healthy
      otel-collector:
        condition: service_started
    deploy:
      replicas: 4

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
   
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana  # Mount to a local folder
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards

    depends_on:
      - prometheus

volumes:
  redis_data:
